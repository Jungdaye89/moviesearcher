name: CI/CD Docker Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./movie-searcher/gradlew

      - name: Build with Gradle
        run: |
          cd movie-searcher
          ./gradlew clean build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./movie-searcher
          file: ./movie-searcher/Dockerfile
          push: true
          tags: jungdaye/moviesearcher:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 네트워크가 없으면 생성
            docker network inspect moviesearcher-net >/dev/null 2>&1 || docker network create moviesearcher-net

            # 기존 컨테이너 중지/삭제
            docker stop moviesearcher || true
            docker rm moviesearcher || true
            docker stop postgres || true
            docker rm postgres || true

            # Postgres 컨테이너 실행
            docker run -d --name postgres --network moviesearcher-net -e POSTGRES_PASSWORD=password -e POSTGRES_DB=moviesearcher -p 5432:5432 postgres:15

            # 최신 이미지 pull
            docker pull jungdaye/moviesearcher:latest

            # 새 컨테이너 실행
            docker run -d --name moviesearcher --network moviesearcher-net -p 8080:8080 jungdaye/moviesearcher:latest 