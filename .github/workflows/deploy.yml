name: Deploy to EC2

on:
  push:
    branches:
      - main # main 브랜치에 push 될 때마다 실행됩니다.

jobs:
  build-and-push:
    name: Build and Push to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # GitHub Secrets에 저장된 DockerHub 아이디
          password: ${{ secrets.DOCKERHUB_TOKEN }}    # GitHub Secrets에 저장된 DockerHub 토큰

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./movie-searcher # Dockerfile이 있는 폴더 경로
          file: ./movie-searcher/Dockerfile # Dockerfile 경로
          push: true
          tags: jungdaye/moviesearcher:latest # DockerHub에 올릴 이미지 이름

  deploy:
    name: Deploy to EC2
    needs: build-and-push # build-and-push 작업이 성공해야 실행됩니다.
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd ~/moviesearcher
            
            # 로컬 변경사항을 무시하고 원격 저장소의 최신 버전으로 강제 업데이트합니다.
            git fetch origin
            git reset --hard origin/main
            git clean -fd
            
            # docker-compose가 있는 폴더로 이동하여 실행합니다.
            cd movie-searcher
            docker-compose pull
            docker-compose up -d --force-recreate
            docker image prune -f